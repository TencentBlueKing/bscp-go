# This workflow will build bscp cli
name: release

on:
  release:
    types:
      - created

jobs:
  release-cli:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goarch: arm64
            goos: darwin
            bin_name: bscp
          - goarch: amd64
            goos: darwin
            bin_name: bscp
          - goarch: amd64
            goos: linux
            bin_name: bscp
          - goarch: arm64
            goos: linux
            bin_name: bscp
          - goarch: amd64
            goos: windows
            bin_name: bscp.exe
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: release go binaries
        uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goversion: 1.20.4
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          build_command: make build GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} VERSION=${{ github.event.release.tag_name }} -ldflags "-X github.com/TencentBlueKing/bk-bcs/bcs-services/bcs-bscp/pkg/version.CLIENTTYPE=command"
          extra_files: LICENSE.txt readme.md readme_en.md bin/${{ matrix.bin_name }}
          asset_name: bscp-${{ github.event.release.tag_name }}-${{ matrix.goos }}-${{ matrix.goarch }}
          md5sum: false

  release-nodemanPlugin:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: release nodeman plugin
        uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goversion: 1.20.4
          goos: linux
          goarch: amd64
          build_command: make build_nodemanPlugin GOOS=linux GOARCH=amd64 VERSION=${{ github.event.release.tag_name }}
          extra_files: build/nodemanPlugin/bkbscp/plugins_linux_x86_64
          asset_name: bscp-${{ github.event.release.tag_name }}-nodemanPlugin
          md5sum: false
